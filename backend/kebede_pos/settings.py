"""
Django settings for kebede_pos project.
Generated by 'django-admin startproject' using Django 5.2.3.
"""

from pathlib import Path
from datetime import timedelta
import os

# Import deployment-specific settings
from kebede_pos.deployment_settings import (
    ALLOWED_HOSTS,
    CORS_ALLOWED_ORIGINS,
    CSRF_TRUSTED_ORIGINS,
    EXTRA_CSRF_ORIGINS,
)

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-m18^jf)3nv*sx4l945otnd+0x*8#6myq(_ah78t!2+yw22j8&1')
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    'rest_framework',

    'channels',
    'django_extensions',

    # Local apps
    'users',
    'products',
    'orders',
    'inventory',
    'payments',
    'branches',
    'activity',
    'menu',
    'reports',
    'core',
    'api',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=15),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_HEADER_TYPES": ("Bearer",),
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Must be first
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Django's built-in session middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Must come after SessionMiddleware
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kebede_pos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'kebede_pos.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    },
}

# Database
import dj_database_url

if os.environ.get('DATABASE_URL'):
    DATABASES = {
        'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
    }
else:



    DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': 'kebede_pos_db',
                'USER': 'postgres',
                'PASSWORD': 'kokeb',
                'HOST': '127.0.0.1',
                'PORT': '5432',
            }
        }
    
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Custom User
AUTH_USER_MODEL = 'users.User'

# Static
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'core.authentication.SessionAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# CORS Settings
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOW_CREDENTIALS = True
    CORS_ALLOW_HEADERS = ['*']
    CORS_EXPOSE_HEADERS = ['*']
else:
    # Production CORS settings
    CORS_ALLOWED_ORIGINS = CORS_ALLOWED_ORIGINS
    CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-environment',
    'x-session-key',
    'X-Session-Key',
    'X-SESSION-KEY',
    'access-control-allow-credentials',
    'access-control-allow-origin',
    'access-control-allow-methods',
    'access-control-allow-headers',
]

CORS_EXPOSE_HEADERS = [
    'access-control-allow-credentials',
    'access-control-allow-origin',
    'access-control-allow-methods',
    'access-control-allow-headers',
    'x-environment',
    'x-session-key',
    'X-Session-Key',
    'X-SESSION-KEY',
]

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
if DEBUG:
    SESSION_COOKIE_SAMESITE = 'Lax'  # Works for local development
    SESSION_COOKIE_SECURE = False  # Keep False for HTTP in development
else:
    SESSION_COOKIE_SAMESITE = 'None'  # Required for cross-origin requests in production
    SESSION_COOKIE_SECURE = True  # Must be True when SameSite=None
SESSION_COOKIE_HTTPONLY = False
SESSION_COOKIE_DOMAIN = None  # Allow all domains
SESSION_COOKIE_AGE = 86400  # 24 hours
SESSION_COOKIE_PATH = '/'
SESSION_SAVE_EVERY_REQUEST = True  # Save on every request for better session handling
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_NAME = 'sessionid'

# Additional session settings for network access
SESSION_COOKIE_ACCESSIBLE = True
SESSION_COOKIE_USE_HTTPS = False

# Ensure sessions work across different origins
SESSION_COOKIE_SAMESITE_FORCE_ALL = False

# Prevent anonymous sessions from being created
# SESSION_SAVE_EVERY_REQUEST is already set above

# Only create sessions for authenticated users
SESSION_CREATE_ANONYMOUS = False

# CSRF Settings - Updated for both local and network
CSRF_USE_REFERER = False
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'
CSRF_COOKIE_HTTPONLY = False
if DEBUG:
    CSRF_COOKIE_SAMESITE = 'Lax'  # Match session cookie setting for development
    CSRF_COOKIE_SECURE = False  # Keep False for HTTP in development
else:
    CSRF_COOKIE_SAMESITE = 'None'  # Match session cookie setting for production
    CSRF_COOKIE_SECURE = True  # Must be True when SameSite=None
CSRF_COOKIE_DOMAIN = None  # Allow all domains
CSRF_USE_SESSIONS = True
CSRF_COOKIE_AGE = 31449600

# Ensure proper cookie handling for cross-origin requests
CSRF_COOKIE_ACCESSIBLE = True
SESSION_COOKIE_ACCESSIBLE = True

# Add CSRF trusted origins for both local and network
if DEBUG:
    CSRF_TRUSTED_ORIGINS.extend(EXTRA_CSRF_ORIGINS)